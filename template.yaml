AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Stackery Serverless Image Processing Demo
Resources:
  uploadedImages:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-uploadedimages
    Metadata:
      StackeryName: Uploaded Images
  imageProcessor:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-imageProcessor
      Description: !Sub
        - Stackery Stack ${StackeryStackTagName} Environment ${StackeryEnvironmentTagName} Function ${ResourceName}
        - ResourceName: imageProcessor
      CodeUri: src/imageProcessor
      Handler: index.handler
      Runtime: nodejs8.10
      MemorySize: 3008
      Timeout: 300
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - S3CrudPolicy:
            BucketName: !Ref processedImages
        - S3CrudPolicy:
            BucketName: !Sub ${AWS::StackName}-uploadedimages
      Events:
        uploadedImages:
          Type: S3
          Properties:
            Bucket: !Ref uploadedImages
            Events:
              - s3:ObjectCreated:*
              - s3:ObjectRemoved:*
      Environment:
        Variables:
          BUCKET_NAME: !Ref processedImages
          BUCKET_ARN: !GetAtt processedImages.Arn
    Metadata:
      StackeryName: imageProcessor
  processedImages:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-processedimages
    Metadata:
      StackeryName: Processed Images
  EdgeFunction:
    Type: Custom::StackeryEdgeFunction
    Properties:
      ServiceToken: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:stackery-agent-commander
      FunctionName: !Sub ${AWS::StackName}-EdgeFunction
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: ghjkl
      Runtime: nodejs8.10
      CodeUri: src/EdgeFunction
      Handler: index.handler
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Role: !GetAtt EdgeFunctionRole.Arn
    Metadata:
      StackeryName: ghjkl
  EdgeFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::StackName}-EdgeFunction
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Principal:
            Service:
              - lambda.amazonaws.com
              - edgelambda.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
Parameters:
  StackeryStackTagName:
    Type: String
    Description: Stack Name (injected by Stackery at deployment time)
  StackeryEnvironmentTagName:
    Type: String
    Description: Environment Name (injected by Stackery at deployment time)
  StackTagName:
    Type: String
    Description: Stack Name (injected by Stackery at deployment time)
  EnvironmentTagName:
    Type: String
    Description: Environment Name (injected by Stackery at deployment time)